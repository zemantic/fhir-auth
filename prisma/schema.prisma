// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                 BigInt        @id @unique @default(autoincrement())
  email              String        @unique
  name               String
  password           String
  created_at         DateTime      @default(now())
  updated_at         DateTime      @default(now())
  is_active          Boolean       @default(true)
  updatedFhirServers fhirServers[] @relation("fhirServerUpdatedUser")
  createdFhirServers fhirServers[] @relation("fhirServerCreatedUser")
  createdClients     clients[]     @relation("clientCreatedUser")
  updatedClients     clients[]     @relation("clientUpdatedUser")
}

model clients {
  id                      BigInt             @id @default(autoincrement())
  clientName              String
  clientId                String             @unique @default(uuid())
  clientHost              String
  clientPublicKeyEndpoint String
  clientDescription       String
  enableGlobalSearch      Boolean
  enableBatchRequests     Boolean
  createdAt               DateTime           @default(now())
  updatedAt               DateTime           @default(now())
  clientPrivilages        clientPrivilages[]
  fhirServer              fhirServers        @relation(fields: [fhirServersId], references: [id])
  isActive                Boolean            @default(true)
  retired                 Boolean            @default(false)
  createdBy               users              @relation("clientCreatedUser", fields: [createdUserId], references: [id])
  updatedBy               users              @relation("clientUpdatedUser", fields: [updatedUserId], references: [id])
  createdUserId           BigInt
  updatedUserId           BigInt
  fhirServersId           BigInt
}

model fhirServers {
  id                    BigInt    @unique @default(autoincrement())
  serverId              String    @unique @default(uuid())
  fhirServerName        String
  fhirServerDescription String?
  fhirServerEndpoint    String
  isActive              Boolean   @default(true)
  retired               Boolean   @default(false)
  createdBy             users     @relation("fhirServerCreatedUser", fields: [createdUserId], references: [id])
  createdUserId         BigInt
  createdAt             DateTime  @default(now())
  updatedBy             users     @relation("fhirServerUpdatedUser", fields: [updatedUserId], references: [id])
  updatedUserId         BigInt
  updatedAt             DateTime  @default(now())
  clients               clients[]
}

model clientPrivilages {
  id          BigInt    @unique @default(autoincrement())
  client      clients   @relation(fields: [clientsId], references: [id])
  resource    resources @relation(fields: [resourcesId], references: [id])
  create      Boolean
  read        Boolean
  update      Boolean
  delete      Boolean
  search      Boolean
  clientsId   BigInt
  resourcesId BigInt
}

model resources {
  id               BigInt             @unique @default(autoincrement())
  resourceName     String
  fhirVersion      Decimal
  maturityStatus   Int
  isActive         Boolean
  clientPrivilages clientPrivilages[]
}

model settings {
  id    BigInt @unique @default(autoincrement())
  key   String
  value String
}
